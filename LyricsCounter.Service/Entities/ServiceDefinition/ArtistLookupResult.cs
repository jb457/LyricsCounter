using Newtonsoft.Json;
using System;

namespace LyricsCounter.Service.Entities
{
    // <auto-generated />
    public partial class ArtistLookupResult
    {
        [JsonProperty("created")]
        public DateTimeOffset Created { get; set; }

        [JsonProperty("count")]
        public long Count { get; set; }

        [JsonProperty("offset")]
        public long Offset { get; set; }

        [JsonProperty("artists")]
        public Artist[] Artists { get; set; }
    }

    public partial class Artist
    {
        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("type")]
        public string Type { get; set; }

        [JsonProperty("type-id")]
        public Guid TypeId { get; set; }

        [JsonProperty("score")]
        public long Score { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("sort-name")]
        public string SortName { get; set; }

        [JsonProperty("country", NullValueHandling = NullValueHandling.Ignore)]
        public string Country { get; set; }

        [JsonProperty("area", NullValueHandling = NullValueHandling.Ignore)]
        public Area Area { get; set; }

        [JsonProperty("begin-area", NullValueHandling = NullValueHandling.Ignore)]
        public Area BeginArea { get; set; }

        [JsonProperty("disambiguation", NullValueHandling = NullValueHandling.Ignore)]
        public string Disambiguation { get; set; }

        [JsonProperty("isnis", NullValueHandling = NullValueHandling.Ignore)]
        public string[] Isnis { get; set; }

        [JsonProperty("life-span")]
        public ArtistLifeSpan LifeSpan { get; set; }

        [JsonProperty("tags", NullValueHandling = NullValueHandling.Ignore)]
        public Tag[] Tags { get; set; }

        [JsonProperty("aliases", NullValueHandling = NullValueHandling.Ignore)]
        public Alias[] Aliases { get; set; }
    }

    public partial class Alias
    {
        [JsonProperty("sort-name")]
        public string SortName { get; set; }

        [JsonProperty("type-id")]
        public Guid TypeId { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("locale")]
        public string Locale { get; set; }

        [JsonProperty("type")]
        public string Type { get; set; }

        [JsonProperty("primary")]
        public bool? Primary { get; set; }

        [JsonProperty("begin-date")]
        public object BeginDate { get; set; }

        [JsonProperty("end-date")]
        public object EndDate { get; set; }
    }

    public partial class Area
    {
        [JsonProperty("id")]
        public Guid Id { get; set; }

        [JsonProperty("type")]
        public string Type { get; set; }

        [JsonProperty("type-id")]
        public Guid TypeId { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("sort-name")]
        public string SortName { get; set; }

        [JsonProperty("life-span")]
        public AreaLifeSpan LifeSpan { get; set; }
    }

    public partial class AreaLifeSpan
    {
        [JsonProperty("ended")]
        public object Ended { get; set; }
    }

    public partial class ArtistLifeSpan
    {
        [JsonProperty("begin")]
        public string Begin { get; set; }

        [JsonProperty("ended")]
        public object Ended { get; set; }
    }

    public partial class Tag
    {
        [JsonProperty("count")]
        public long Count { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }
    }
}
